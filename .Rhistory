#' get_sample_locations(file, "Sample IDs", TRUE, 96)
#'
#' @export
get_sample_locations <- function(file, tab_name = "Sample IDs", dilution_bool = FALSE, dilution_fun = NULL, plate = 96) {
data.frame(
wells = get_wells(file),
IDs = (
organize_tables(file, plate = plate) %>%
convert_tables() %>%
suppressMessages() %>%
na.omit()
)[[tab_name]],
row.names = NULL
) %>%
na.omit() %>%
mutate(
"IDs" = ifelse(
str_length(.[["IDs"]]) > 12,
gsub(" ", "\n", .[["IDs"]]),
.[["IDs"]]
),
"IDs" = if (dilution_bool) {
paste(
as.character(.[["IDs"]]),
"\n",
(organize_tables(file) %>%
convert_tables() %>%
suppressMessages())[["Dilutions"]] %>%
as.numeric() %>%
sapply(dilution_fun) %>%
na.omit()
)
} else {
.[["IDs"]]
}
)
}
#| fig-width: 8
#| fig-height: 7
sample_locations <- get_sample_locations(file, dilution_bool = TRUE)
#'
#' @examples
#' file <- system.file(
#'   "extdata/input_files",
#'   file = "test.xlsx",
#'   package = "quicR"
#' )
#' get_sample_locations(file, "Sample IDs", TRUE, 96)
#'
#' @export
get_sample_locations <- function(file, tab_name = "Sample IDs", dilution_bool = FALSE, dilution_fun = function(x) 1*x, plate = 96) {
data.frame(
wells = get_wells(file),
IDs = (
organize_tables(file, plate = plate) %>%
convert_tables() %>%
suppressMessages() %>%
na.omit()
)[[tab_name]],
row.names = NULL
) %>%
na.omit() %>%
mutate(
"IDs" = ifelse(
str_length(.[["IDs"]]) > 12,
gsub(" ", "\n", .[["IDs"]]),
.[["IDs"]]
),
"IDs" = if (dilution_bool) {
paste(
as.character(.[["IDs"]]),
"\n",
(organize_tables(file) %>%
convert_tables() %>%
suppressMessages())[["Dilutions"]] %>%
as.numeric() %>%
sapply(dilution_fun) %>%
na.omit()
)
} else {
.[["IDs"]]
}
)
}
#| fig-width: 8
#| fig-height: 7
sample_locations <- get_sample_locations(file, dilution_bool = TRUE)
View(sample_locations)
#| fig-width: 8
#| fig-height: 7
sample_locations <- get_sample_locations(
file,
dilution_bool = TRUE,
dilution_fun = function(x) -log10(x)
)
plate_view(df_, sample_locations)
library(quicR)
library(dplyr)
library(kableExtra)
library(readxl)
library(readr)
library(ggplot2)
library(reshape2)
file <- "../../inst/extdata/input_files/test2.xlsx"
sample_file <- "../../inst/extdata/BMG_formatting/plate_layout.csv"
BMG_format(sample_file, write_file = FALSE)[1:18] %>%
as.data.frame()
tabs <- organize_tables(file)[-1]
tabs
tabs <- convert_tables(tabs)
tabs %>% head(15) %>% kable(row.names = FALSE)
get_meta(file) %>% as.data.frame()
df_ <- get_real(file, ordered = FALSE)[[1]] %>% as.data.frame()
df_[1:15, 1:6] %>% kable(row.names = FALSE)
transpose_real(df_)[1:15, 1:13] %>% kable(row.names = FALSE)
df_norm <- normalize_RFU(df_, bg_cycle = 4, transposed = FALSE)
df_norm[1:15, 1:12] %>%
mutate_at(2:ncol(.), ~round(as.numeric(.), 2)) %>%
kable(row.names = FALSE)
samples <- tabs$`Sample IDs` %>% na.omit()
dilutions <- tabs$Dilutions %>% na.omit() %>% as.numeric()
# Define the number of hours that the rxn ran for.
hours <- as.numeric(colnames(df_norm)[ncol(df_norm)])
df_analyzed <- data.frame("Sample IDs" = samples, check.names = FALSE) %>%
mutate(
Dilutions = -log10(dilutions),
# Maxpoint Ratio
MPR = calculate_MPR(df_norm, start_col = 3, data_is_norm = TRUE),
# Max Slope
MS = calculate_MS(df_norm, data_is_norm = TRUE),
# Time to Threshold
TtT = calculate_TtT(df_norm, threshold = 2, start_col = 3),
# Rate of Amyloid Formation
RAF = ifelse(TtT == hours, 0, 1 / TtT)
)
View(df_norm)
View(df_)
View(df_norm)
df_norm <- normalize_RFU(df_, bg_cycle = 4, transposed = FALSE) %>%
mutate(`Sample IDs` = convert_tables(organize_tables(file)){{"Sample IDs"}})
df_norm <- normalize_RFU(df_, bg_cycle = 4, transposed = FALSE) %>%
mutate(`Sample IDs` = convert_tables(organize_tables(file))[["Sample IDs"]])
df_norm[1:15, 1:12] %>%
mutate_at(2:ncol(.), ~round(as.numeric(.), 2)) %>%
kable(row.names = FALSE)
samples <- tabs$`Sample IDs` %>% na.omit()
dilutions <- tabs$Dilutions %>% na.omit() %>% as.numeric()
file <- "../../inst/extdata/input_files/test.xlsx"
library(quicR)
library(dplyr)
library(kableExtra)
library(readxl)
library(readr)
library(ggplot2)
library(reshape2)
file <- "../../inst/extdata/input_files/test.xlsx"
sample_file <- "../../inst/extdata/BMG_formatting/plate_layout.csv"
BMG_format(sample_file, write_file = FALSE)[1:18] %>%
as.data.frame()
tabs <- organize_tables(file)[-1]
tabs
tabs <- convert_tables(tabs)
tabs %>% head(15) %>% kable(row.names = FALSE)
get_meta(file) %>% as.data.frame()
df_ <- get_real(file, ordered = FALSE)[[1]] %>% as.data.frame()
df_[1:15, 1:6] %>% kable(row.names = FALSE)
transpose_real(df_)[1:15, 1:13] %>% kable(row.names = FALSE)
df_norm <- normalize_RFU(df_, bg_cycle = 4, transposed = FALSE) %>%
mutate(`Sample IDs` = convert_tables(organize_tables(file))[["Sample IDs"]])
df_norm[1:15, 1:12] %>%
mutate_at(2:ncol(.), ~round(as.numeric(.), 2)) %>%
kable(row.names = FALSE)
samples <- tabs$`Sample IDs` %>% na.omit()
dilutions <- tabs$Dilutions %>% na.omit() %>% as.numeric()
# Define the number of hours that the rxn ran for.
hours <- as.numeric(colnames(df_norm)[ncol(df_norm)])
df_analyzed <- data.frame("Sample IDs" = samples, check.names = FALSE) %>%
mutate(
Dilutions = -log10(dilutions),
# Maxpoint Ratio
MPR = calculate_MPR(df_norm, start_col = 3, data_is_norm = TRUE),
# Max Slope
MS = calculate_MS(df_norm, data_is_norm = TRUE),
# Time to Threshold
TtT = calculate_TtT(df_norm, threshold = 2, start_col = 3),
# Rate of Amyloid Formation
RAF = ifelse(TtT == hours, 0, 1 / TtT)
)
df_analyzed%>%
head(15) %>%
kable(row.names = FALSE)
#| fig-width: 12
#| fig-height: 8
sample_locations <- get_sample_locations(
file,
dilution_bool = TRUE,
dilution_fun = function(x) -log10(x)
)
plate_view(df_, sample_locations)
#| fig-width: 6
#| fig-height: 5
df_analyzed %>%
melt(id.vars = c("Sample IDs", "Dilutions")) %>%
mutate_at("Dilutions", as.factor) %>%
ggplot(aes(`Sample IDs`, value, fill = Dilutions)) +
geom_boxplot() +
facet_wrap(~variable, scales = "free") +
theme(
legend.position = "bottom",
strip.text = element_text(face = "bold")
)
df_norm <- normalize_RFU(df_, bg_cycle = 4, transposed = FALSE)
View(df_norm)
df_norm <- normalize_RFU(df_, bg_cycle = 4, transposed = FALSE) %>%
mutate(`Sample IDs` = convert_tables(organize_tables(file))[["Sample IDs"]])
samples <- tabs$`Sample IDs` %>% na.omit()
dilutions <- tabs$Dilutions %>% na.omit() %>% as.numeric()
# Define the number of hours that the rxn ran for.
hours <- as.numeric(colnames(df_norm)[ncol(df_norm)])
df_analyzed <- data.frame("Sample IDs" = samples, check.names = FALSE) %>%
mutate(
Dilutions = -log10(dilutions),
# Maxpoint Ratio
MPR = calculate_MPR(df_norm, start_col = 3, data_is_norm = TRUE),
# Max Slope
MS = calculate_MS(df_norm, data_is_norm = TRUE),
# Time to Threshold
TtT = calculate_TtT(df_norm, threshold = 2, start_col = 3),
# Rate of Amyloid Formation
RAF = ifelse(TtT == hours, 0, 1 / TtT)
)
df_analyzed%>%
head(15) %>%
kable(row.names = FALSE)
#| fig-width: 6
#| fig-height: 5
df_analyzed %>%
melt(id.vars = c("Sample IDs", "Dilutions")) %>%
mutate_at("Dilutions", as.factor) %>%
ggplot(aes(`Sample IDs`, value, fill = Dilutions)) +
geom_boxplot() +
facet_wrap(~variable, scales = "free") +
theme(
legend.position = "bottom",
strip.text = element_text(face = "bold"),
axis.text.x = element_text(angle = 45)
)
#| fig-width: 6
#| fig-height: 5
df_analyzed %>%
melt(id.vars = c("Sample IDs", "Dilutions")) %>%
mutate_at("Dilutions", as.factor) %>%
ggplot(aes(`Sample IDs`, value, fill = Dilutions)) +
geom_boxplot() +
facet_wrap(~variable, scales = "free") +
theme(
legend.position = "bottom",
strip.text = element_text(face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5)
)
#| fig-width: 6
#| fig-height: 5
df_analyzed %>%
melt(id.vars = c("Sample IDs", "Dilutions")) %>%
mutate_at("Dilutions", as.factor) %>%
ggplot(aes(`Sample IDs`, value, fill = Dilutions)) +
geom_boxplot() +
facet_wrap(~variable, scales = "free") +
theme(
legend.position = "bottom",
strip.text = element_text(face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1, vjust = 0.5)
)
#| fig-width: 6
#| fig-height: 5
df_analyzed %>%
melt(id.vars = c("Sample IDs", "Dilutions")) %>%
mutate_at("Dilutions", as.factor) %>%
ggplot(aes(`Sample IDs`, value, fill = Dilutions)) +
geom_boxplot() +
facet_wrap(~variable, scales = "free") +
theme(
legend.position = "bottom",
strip.text = element_text(face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)
)
file_384 <- "../../inst/extdata/input_files/test384.xlsx"
tabs <- organize_tables(file)[-1]
tabs$`Sample IDs`
samples <- tabs$`Sample IDs` %>% na.omit()
tabs <- convert_tables(tabs)
View(tabs)
file <- "../../inst/extdata/input_files/test2.xlsx"
library(quicR)
library(dplyr)
library(kableExtra)
library(readxl)
library(readr)
library(ggplot2)
library(reshape2)
file <- "../../inst/extdata/input_files/test2.xlsx"
file_384 <- "../../inst/extdata/input_files/test384.xlsx"
sample_file <- "../../inst/extdata/BMG_formatting/plate_layout.csv"
BMG_format(sample_file, write_file = FALSE)[1:18] %>%
as.data.frame()
tabs <- organize_tables(file)[-1]
tabs$`Sample IDs`
tabs$Dilutions
tabs <- convert_tables(tabs)
tabs %>% head(15) %>% kable(row.names = FALSE)
get_meta(file) %>% as.data.frame()
df_ <- get_real(file, ordered = FALSE)[[1]] %>% as.data.frame()
df_[1:15, 1:6] %>% kable(row.names = FALSE)
transpose_real(df_)[1:15, 1:13] %>% kable(row.names = FALSE)
df_norm <- normalize_RFU(df_, bg_cycle = 4, transposed = FALSE) %>%
mutate(`Sample IDs` = convert_tables(organize_tables(file))[["Sample IDs"]])
df_norm[1:15, 1:12] %>%
mutate_at(2:ncol(.), ~round(as.numeric(.), 2)) %>%
kable(row.names = FALSE)
samples <- tabs$`Sample IDs` %>% na.omit()
dilutions <- tabs$Dilutions %>% na.omit() %>% as.numeric()
# Define the number of hours that the rxn ran for.
hours <- as.numeric(colnames(df_norm)[ncol(df_norm)])
df_analyzed <- data.frame("Sample IDs" = samples, check.names = FALSE) %>%
mutate(
Dilutions = -log10(dilutions),
# Maxpoint Ratio
MPR = calculate_MPR(df_norm, start_col = 3, data_is_norm = TRUE),
# Max Slope
MS = calculate_MS(df_norm, data_is_norm = TRUE),
# Time to Threshold
TtT = calculate_TtT(df_norm, threshold = 2, start_col = 3),
# Rate of Amyloid Formation
RAF = ifelse(TtT == hours, 0, 1 / TtT)
)
samples <- tabs$`Sample IDs` %>% na.omit()
View(tabs)
library(quicR)
library(dplyr)
library(kableExtra)
library(readxl)
library(readr)
library(ggplot2)
library(reshape2)
file <- "../../inst/extdata/input_files/test2.xlsx"
file_384 <- "../../inst/extdata/input_files/test384.xlsx"
sample_file <- "../../inst/extdata/BMG_formatting/plate_layout.csv"
tabs <- organize_tables(file)
View(tabs)
tabs[1]
tabs[1] %>%
kable(row.names = FALSE)
```{r}
View(tabs)
View(tabs)
```{r}
```{r}
tabs
```{r}
tabs[1] %>%
kable(row.names = FALSE)
BMG_format(sample_file, write_file = FALSE)[1:18]
BMG_format(sample_file, write_file = FALSE)[1:18] %>%
as.data.frame()
tabs[1] %>%
kable(row.names = FALSE)
?kable
tabs[[1]] %>%
kable(row.names = FALSE)
LETTERS[1:8]
rename <- function(x) {
colnames(x) <- c("", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12")
rownames(x) <- LETTERS[1:8]
}
tabs$`Sample IDs` %>%
rename() %>%
kable(row.names = FALSE)
library(kableExtra)
?kable_styling
1:12
rename <- function(x) {
names(x) <- 1:12
rownames(x) <- LETTERS[1:8]
return(x)
}
tabs$`Sample IDs` %>%
as.data.frame() %>%
rename() %>%
kable() %>%
kable_styling(latex_options = "scale_up")
tabs$Dilutions %>%
as.data.frame() %>%
rename() %>%
kable(align = c(rep("c", 12))) %>%
kable_styling(full_width = TRUE)
tabs$Dilutions %>%
as.data.frame() %>%
rename() %>%
kable(align = rep("c", 12)) %>%
kable_styling(full_width = TRUE)
tabs$Dilutions %>%
as.data.frame() %>%
rename() %>%
kable(align = rep("c", 12)) %>%
kable_styling(full_width = F)
tabs$`Sample IDs` %>%
as.data.frame() %>%
rename() %>%
kable(align = rep("c", ncol(.))) %>%
kable_styling(full_width = TRUE)
tabs$Dilutions %>%
as.data.frame() %>%
rename() %>%
kable(align = rep("c", 12), longtable = FALSE) %>%
kable_styling(full_width = TRUE)
?kable
?kable_styling
BMG_format(sample_file, write_file = FALSE)[1:18] %>%
paste(sep = "\n")
# as.data.frame()
BMG_format(sample_file, write_file = FALSE)[1:18] %>%
paste(sep = "\n") %>%
print()
BMG_format(sample_file, write_file = FALSE)[1:18] %>%
# paste(sep = "\n") %>%
print()
BMG_format(sample_file, write_file = FALSE)[1:18] %>%
paste(collapse = "\n")
(BMG_format(sample_file, write_file = FALSE)[1:18] %>%
paste(collapse = "\n"))[1]
(BMG_format(sample_file, write_file = FALSE)[1:18] %>%
paste(collapse = "\n"))[[1]]
BMG_format(sample_file, write_file = FALSE)
BMG_format(sample_file, write_file = FALSE)[1:12]
?paste
formatted
formatted <- BMG_format(sample_file, write_file = FALSE)
formatted
df_norm <- df_norm %>%
mutate(`Sample IDs` = tabs[["Sample IDs"]])
tabs <- organize_tables(file)[-2]
tabs <- convert_tables(tabs)
tabs %>% head(12) %>% kable(row.names = FALSE)
?get_sample_locations
get_sample_locations(
file, dilution_bool = TRUE, dilution_fun = function(x) -log10(x)
)
get_sample_locations(
file, dilution_bool = TRUE, dilution_fun = function(x) -log10(x)
) %>%
head(12) %>%
kable(row.names = FALSE, align = c("c", "c"), escape = FALSE)
get_sample_locations(
file, dilution_bool = TRUE, dilution_fun = function(x) -log10(x)
) %>%
head(12) %>%
kable(row.names = FALSE, align = c("c", "c"), escape = TRUE)
#'
#' @examples
#' file <- system.file(
#'   "extdata/input_files",
#'   file = "test.xlsx",
#'   package = "quicR"
#' )
#' get_sample_locations(file)
#'
#' @export
get_sample_locations <- function(file, tab_name = "Sample IDs", dilution_bool = FALSE, dilution_fun = function(x) 1*x, sep = "\n", plate = 96) {
data.frame(
wells = get_wells(file),
IDs = (
organize_tables(file, plate = plate) %>%
convert_tables() %>%
suppressMessages() %>%
na.omit()
)[[tab_name]],
row.names = NULL
) %>%
na.omit() %>%
mutate(
"IDs" = ifelse(
str_length(.[["IDs"]]) > 12,
gsub(" ", "\n", .[["IDs"]]),
.[["IDs"]]
),
"IDs" = if (dilution_bool) {
paste(
as.character(.[["IDs"]]),
sep,
(organize_tables(file) %>%
convert_tables() %>%
suppressMessages())[["Dilutions"]] %>%
as.numeric() %>%
sapply(dilution_fun) %>%
na.omit()
)
} else {
.[["IDs"]]
}
)
}
get_sample_locations(
file, dilution_bool = TRUE, dilution_fun = function(x) -log10(x), sep = " "
) %>%
head(12) %>%
kable(row.names = FALSE, align = c("c", "c"), escape = TRUE)
library(stringr)
get_sample_locations(
file, dilution_bool = TRUE, dilution_fun = function(x) -log10(x), sep = " "
) %>%
head(12) %>%
kable(row.names = FALSE, align = c("c", "c"), escape = TRUE)
