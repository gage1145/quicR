theme(
panel.border = element_rect(colour="black", fill=NA, linewidth=0.5),
strip.background = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()
) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller) %>%
suppressWarnings()
df %>%
# Melt the data to help with the faceting.
reshape2::melt(id.vars = "Time")
df %>%
# Melt the data to help with the faceting.
reshape2::melt(id.vars = "Time") %>%
# Separate the wells from the IDs.
separate(variable, c("ID", "Well"), "\\.", fill="left")
df %>%
# Melt the data to help with the faceting.
reshape2::melt(id.vars = "Time") %>%
# Separate the wells from the IDs.
separate(variable, c("ID", "Well"), "\\.", fill="left") %>%
# Ensures that Time and observations are numeric.
mutate(Time = as.numeric(Time),
value = as.numeric(value),
ID = as.character(ID),
Well = as.factor(Well)) %>%
mutate(ID = replace_na(ID, "none"))
# Create the labeller function for the facet plot.
ID_labeller <- function(variable, value) {
i <- full[,2][full[,1] == value]
ifelse(is.na(i), " ", i)
}
df %>%
# Melt the data to help with the faceting.
reshape2::melt(id.vars = "Time") %>%
# Separate the wells from the IDs.
separate(variable, c("ID", "Well"), "\\.", fill="left") %>%
# Ensures that Time and observations are numeric.
mutate(Time = as.numeric(Time),
value = as.numeric(value),
ID = as.character(ID),
Well = as.factor(Well)) %>%
mutate(ID = replace_na(ID, "none")) %>%
# Create the facet plot.
ggplot(aes(x=Time, y=value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme(
panel.border = element_rect(colour="black", fill=NA, linewidth=0.5),
strip.background = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()
) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller) %>%
suppressWarnings()
df %>%
# Melt the data to help with the faceting.
reshape2::melt(id.vars = "Time") %>%
# Separate the wells from the IDs.
separate(variable, c("ID", "Well"), "\\.", fill="left") %>%
# Ensures that Time and observations are numeric.
mutate(Time = as.numeric(Time),
value = as.numeric(value),
ID = as.character(ID),
Well = as.factor(Well)) %>%
mutate(ID = replace_na(ID, "none")) %>%
# Create the facet plot.
ggplot(aes(x=Time, y=value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme(
panel.border = element_rect(colour="black", fill=NA, linewidth=0.5),
strip.background = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()
)
df %>%
# Melt the data to help with the faceting.
reshape2::melt(id.vars = "Time") %>%
# Separate the wells from the IDs.
separate(variable, c("ID", "Well"), "\\.", fill="left") %>%
# Ensures that Time and observations are numeric.
mutate(Time = as.numeric(Time),
value = as.numeric(value),
ID = as.character(ID),
Well = as.factor(Well)) %>%
mutate(ID = replace_na(ID, "none")) %>%
# Create the facet plot.
ggplot(aes(x=Time, y=value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme(
panel.border = element_rect(colour="black", fill=NA, linewidth=0.5),
strip.background = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()
) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
# labeller=ID_labeller
) %>%
suppressWarnings()
# Create the labeller function for the facet plot.
ID_labeller <- function(variable, value) {
i <- full[,2][full[,1] == value]
ifelse(is.na(i), " ", i)
}
df %>%
# Melt the data to help with the faceting.
reshape2::melt(id.vars = "Time") %>%
# Separate the wells from the IDs.
separate(variable, c("ID", "Well"), "\\.", fill="left") %>%
# Ensures that Time and observations are numeric.
mutate(Time = as.numeric(Time),
value = as.numeric(value),
ID = as.character(ID),
Well = as.factor(Well)) %>%
mutate(ID = replace_na(ID, "none")) %>%
# Create the facet plot.
ggplot(aes(x=Time, y=value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme(
panel.border = element_rect(colour="black", fill=NA, linewidth=0.5),
strip.background = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()
) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller
) %>%
suppressWarnings()
View(full)
plot <- df %>%
# Melt the data to help with the faceting.
reshape2::melt(id.vars = "Time") %>%
# Separate the wells from the IDs.
separate(variable, c("ID", "Well"), "\\.", fill="left") %>%
# Ensures that Time and observations are numeric.
mutate(Time = as.numeric(Time),
value = as.numeric(value),
ID = as.character(ID),
Well = as.factor(Well)) %>%
mutate(ID = replace_na(ID, "none"))
View(plot)
plot <- df %>%
# Melt the data to help with the faceting.
reshape2::melt(id.vars = "Time") %>%
# Separate the wells from the IDs.
separate(variable, c("ID", "Well"), "\\.", fill="left") %>%
# Ensures that Time and observations are numeric.
mutate(Time = as.numeric(Time),
value = as.numeric(value),
ID = as.character(ID),
Well = as.factor(Well)) %>%
mutate(ID = replace_na(ID, "none")) +
# Create the facet plot.
ggplot(aes(x=Time, y=value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme(
panel.border = element_rect(colour="black", fill=NA, linewidth=0.5),
strip.background = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()
) +
facet_wrap(vars(ID),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller
) %>%
suppressWarnings()
plot <- df %>%
# Melt the data to help with the faceting.
reshape2::melt(id.vars = "Time") %>%
# Separate the wells from the IDs.
separate(variable, c("ID", "Well"), "\\.", fill="left") %>%
# Ensures that Time and observations are numeric.
mutate(Time = as.numeric(Time),
value = as.numeric(value),
ID = as.character(ID),
Well = as.factor(Well)) %>%
mutate(ID = replace_na(ID, "none")) +
# Create the facet plot.
ggplot(aes(x=Time, y=value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme(
panel.border = element_rect(colour="black", fill=NA, linewidth=0.5),
strip.background = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()
) +
facet_wrap(vars(ID),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
# labeller=ID_labeller
) %>%
suppressWarnings()
plot <- df %>%
# Melt the data to help with the faceting.
reshape2::melt(id.vars = "Time") %>%
# Separate the wells from the IDs.
separate(variable, c("ID", "Well"), "\\.", fill="left") %>%
# Ensures that Time and observations are numeric.
mutate(Time = as.numeric(Time),
value = as.numeric(value),
ID = as.character(ID),
Well = as.factor(Well)) %>%
mutate(ID = replace_na(ID, "none")) %>%
# Create the facet plot.
ggplot(aes(x=Time, y=value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme(
panel.border = element_rect(colour="black", fill=NA, linewidth=0.5),
strip.background = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()
) +
facet_wrap(vars(ID),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
# labeller=ID_labeller
) %>%
suppressWarnings()
plot <- df %>%
# Melt the data to help with the faceting.
reshape2::melt(id.vars = "Time") %>%
# Separate the wells from the IDs.
separate(variable, c("ID", "Well"), "\\.", fill="left") %>%
# Ensures that Time and observations are numeric.
mutate(Time = as.numeric(Time),
value = as.numeric(value),
ID = as.character(ID),
Well = as.factor(Well)) %>%
mutate(ID = replace_na(ID, "none")) %>%
# Create the facet plot.
ggplot(aes(x=Time, y=value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme(
panel.border = element_rect(colour="black", fill=NA, linewidth=0.5),
strip.background = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()
) +
facet_wrap(vars(ID),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
# labeller=ID_labeller
)
plot <- df %>%
# Melt the data to help with the faceting.
reshape2::melt(id.vars = "Time") %>%
# Separate the wells from the IDs.
separate(variable, c("Well", "ID"), "\\.", fill="left") %>%
# Ensures that Time and observations are numeric.
mutate(Time = as.numeric(Time),
value = as.numeric(value),
ID = as.character(ID),
Well = as.factor(Well)) %>%
mutate(ID = replace_na(ID, "none")) %>%
# Create the facet plot.
ggplot(aes(x=Time, y=value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme(
panel.border = element_rect(colour="black", fill=NA, linewidth=0.5),
strip.background = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()
) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
# labeller=ID_labeller
)
plot
plot <- df %>%
# Melt the data to help with the faceting.
reshape2::melt(id.vars = "Time") %>%
# Separate the wells from the IDs.
separate(variable, c("Well", "ID"), "\\.", fill="left") %>%
# Ensures that Time and observations are numeric.
mutate(Time = as.numeric(Time),
value = as.numeric(value),
ID = as.character(ID),
Well = as.factor(Well)) %>%
mutate(ID = replace_na(ID, "none")) %>%
# Create the facet plot.
ggplot(aes(x=Time, y=value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme(
panel.border = element_rect(colour="black", fill=NA, linewidth=0.5),
strip.background = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()
) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller
)
df %>%
# Melt the data to help with the faceting.
reshape2::melt(id.vars = "Time") %>%
# Separate the wells from the IDs.
separate(variable, c("Well", "ID"), "\\.", fill="left") %>%
# Ensures that Time and observations are numeric.
mutate(Time = as.numeric(Time),
value = as.numeric(value),
ID = as.character(ID),
Well = as.factor(Well)) %>%
mutate(ID = replace_na(ID, "none")) %>%
# Create the facet plot.
ggplot(aes(x=Time, y=value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme(
panel.border = element_rect(colour="black", fill=NA, linewidth=0.5),
strip.background = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()
) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller
)
?labeller
# Create the labeller function for the facet plot.
ID_labeller <- function(value) {
i <- full[,2][full[,1] == value]
ifelse(is.na(i), " ", i)
}
df %>%
# Melt the data to help with the faceting.
reshape2::melt(id.vars = "Time") %>%
# Separate the wells from the IDs.
separate(variable, c("Well", "ID"), "\\.", fill="left") %>%
# Ensures that Time and observations are numeric.
mutate(Time = as.numeric(Time),
value = as.numeric(value),
ID = as.character(ID),
Well = as.factor(Well)) %>%
mutate(ID = replace_na(ID, "none")) %>%
# Create the facet plot.
ggplot(aes(x=Time, y=value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme(
panel.border = element_rect(colour="black", fill=NA, linewidth=0.5),
strip.background = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()
) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller
)
# Create the labeller function for the facet plot.
ID_labeller <- function(variable, value) {
i <- full[,2][full[,1] == value]
ifelse(is.na(i), " ", i)
}
df %>%
# Melt the data to help with the faceting.
reshape2::melt(id.vars = "Time") %>%
# Separate the wells from the IDs.
separate(variable, c("Well", "ID"), "\\.", fill="left") %>%
# Ensures that Time and observations are numeric.
mutate(Time = as.numeric(Time),
value = as.numeric(value),
ID = as.character(ID),
Well = as.factor(Well)) %>%
mutate(ID = replace_na(ID, "none")) %>%
# Create the facet plot.
ggplot(aes(x=Time, y=value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme(
panel.border = element_rect(colour="black", fill=NA, linewidth=0.5),
strip.background = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()
) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller
) %>%
suppressWarnings()
df %>%
# Melt the data to help with the faceting.
reshape2::melt(id.vars = "Time") %>%
# Separate the wells from the IDs.
separate(variable, c("Well", "ID"), "\\.", fill="left") %>%
# Ensures that Time and observations are numeric.
mutate(Time = as.numeric(Time),
value = as.numeric(value),
ID = as.character(ID),
Well = as.factor(Well)) %>%
mutate(ID = replace_na(ID, "none")) %>%
# Create the facet plot.
ggplot(aes(x=Time, y=value)) +
geom_line() +
labs(y = "RFU",
x = "Time (h)") +
theme_classic() +
theme(
panel.border = element_rect(colour="black", fill=NA, linewidth=0.5),
strip.background = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank()
) +
facet_wrap(vars(Well),
nrow=ifelse(plate == 96, 8, 16),
ncol=ifelse(plate == 96, 12, 24),
labeller=ID_labeller
) %>%
suppressWarnings()
file <- "test3.xlsx"
plate = 96
df_id = 1
# Define the layout using the first sheet in the excel file.
# The sheet should be formatted so that each ID in the "layout" table is unique.
df_dic <- quicR::organize_tables(file, plate = plate)
IDs <- df_dic[["Sample IDs"]] |>
t() |>
as.data.frame() |>
tidyr::gather() |>
dplyr::select(value)
file = "test3.xlsx"
df_id = 1
plate = 96
# Define the layout using the first sheet in the excel file.
# The sheet should be formatted so that each ID in the "layout" table is unique.
df_dic <- quicR::organize_tables(file, plate = plate)
IDs <- df_dic[["Sample IDs"]] |>
t() |>
as.data.frame() |>
tidyr::gather() |>
dplyr::select(value)
# Determine if there is a dilutions table.
dilution_bool <- "Dilutions" %in% names(df_dic)
# Add dilution factors if applicable.
if (dilution_bool) {
dilutions <- df_dic[["Dilutions"]] |>
t() |>
as.data.frame() |>
tidyr::gather() |>
dplyr::select(value) |>
dplyr::mutate(value = -log10(as.numeric(value)))
# for (i in t(df_dic[["Dilutions"]])) {
#   for (j in i) {
#     if (!is.na(j)) {
#       dilutions <- rbind(dilutions, j)
#     }
#   }
# }
}
# Read in the real-time data.
# "get_real" will return a list of dataframes depending on how many real-time
# measurements the user exported from MARS.
df_list <- quicR::get_real(file, ordered=FALSE)
df <- as.data.frame(df_list[[df_id]])
# Set the time column as the df index.
rownames(df) <- df[, 1]
# Remove the time column and ID row.
df <- df[, -1]
# Get the wells used in the run.
wells <- quicR::get_wells(file) |>
as.data.frame() |> t() |> as.data.frame()
# Take the metadata and apply it into a dataframe for the plate_view function.
sample_locations <- cbind(wells, IDs) |> na.omit()
# Add the dilutions if applicable.
if (dilution_bool) {
sample_locations <- sample_locations |>
# dplyr::mutate(Dilutions = dilutions)
dplyr::mutate(Dilutions = dilutions$value) |>
tidyr::unite(value, value:Dilutions, sep = "\n")
}
# Run plate_view function which produces a plate view figure.
quicR::plate_view(df, sample_locations, plate)
library(ggplot)
library(ggplot2)
?theme_classic
