TtT = quicR::calculate_TtT(df_norm, threshold = 2, start_col = 6, run_time = 48),
# Rate of Amyloid Formation
RAF = ifelse(TtT == 48, 0, 1 / (3600 * TtT)),
# Crossed threshold?
crossed = TtT != 48
) %>%
# Order the data frame based on Sample_ID.
arrange("Sample IDs")
View(df_analyzed)
# Calculate the slope using a moving window linear regression.
df_norm_t <- t(data)
View(df_norm_t)
# Calculate the slope using a moving window linear regression.
df_norm_t <- data %>%
t() %>%
as.numeric(as.character())
# Calculate the slope using a moving window linear regression.
df_norm_t <- data %>%
t() %>%
mutate_all(
~ as.numeric(as.character(.x))
)
# Calculate the slope using a moving window linear regression.
df_norm_t <- data %>%
t() %>%
as.data.frame() %>%
mutate_all(
~ as.numeric(as.character(.x))
)
# Calculate the slope using a moving window linear regression.
df_norm_t <- data %>%
t() %>%
as.data.frame() %>%
suppressWarnings(
mutate_all(
~ as.numeric(as.character(.x))
)
)
View(df_norm_t)
# Calculate the slope using a moving window linear regression.
df_norm_t <- data %>%
t() %>%
as.data.frame() %>%
mutate_all(
~ as.numeric(as.character(.x))
) %>%
suppressWarnings()
# Calculate the slope using a moving window linear regression.
df_norm_t <- data %>%
t() %>%
as.data.frame() %>%
mutate_all(
~ as.numeric(as.character(.x))
) %>%
suppressWarnings() %>%
na.omit()
df_norm_t$Time <- rownames(df_norm_t)
df_deriv <- rownames(df_norm_t)
for (i in colnames(df_norm_t)[-1]) {
slope_column <- slide(
df_norm_t,
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[[1]][[2]] / 3600,
.before = window,
.complete = TRUE
)
df_deriv <- cbind(df_deriv, slope_column)
}
# Reformat df_deriv to match data formatting.
df_deriv_1 <- df_deriv %>%
as.data.frame() %>%
t() %>%
as.data.frame() %>%
slice(-1) %>%
select(-all_of(1:window)) %>%
mutate_all(as.numeric)
View(df_deriv_1)
MS_list <- apply(df_deriv_1, 1, function(x) max(as.numeric(x)))
df_deriv <- df_norm_t$Time
df_deriv <- data.frame(Time = df_norm_t$Time)
View(df_deriv)
for (i in colnames(df_norm_t)[-"Time"]) {
slope_column <- slide(
df_norm_t,
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[[1]][[2]] / 3600,
.before = window,
.complete = TRUE
)
df_deriv <- cbind(df_deriv, slope_column)
}
for (i in colnames(df_norm_t)[-c("Time")]) {
slope_column <- slide(
df_norm_t,
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[[1]][[2]] / 3600,
.before = window,
.complete = TRUE
)
df_deriv <- cbind(df_deriv, slope_column)
}
for (i in colnames(df_norm_t)[-ncol(df_norm_t)]) {
slope_column <- slide(
df_norm_t,
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[[1]][[2]] / 3600,
.before = window,
.complete = TRUE
)
df_deriv <- cbind(df_deriv, slope_column)
}
ncol(df_norm_t)
slope_column <- slide(
df_norm_t,
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[[1]][[2]] / 3600,
.before = window,
.complete = TRUE
)
View(slope_column)
df_deriv <- data.frame(Time = df_norm_t$Time)
df_deriv <- cbind(df_deriv, slope_column)
View(df_deriv)
slope_column <- df_norm_t %>%
slide(
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[[1]][[2]] / 3600,
.before = window,
.complete = TRUE
) %>%
c()
df_deriv <- cbind(df_deriv, slope_column)
slope_column <- df_norm_t %>%
slide(
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[[1]][[2]] / 3600,
.before = window,
.complete = TRUE
) %>%
t()
slope_column <- df_norm_t %>%
slide(
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[[1]][[2]] / 3600,
.before = window,
.complete = TRUE
) %>%
as.data.frame()
slope_column <- df_norm_t %>%
slide(
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[[1]][[2]] / 3600,
.before = window,
.complete = TRUE
) %>%
as.data.frame()
slope_column <- df_norm_t %>%
slide(
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[[1]][[2]] / 3600,
.before = window,
.complete = TRUE
)
View(slope_column)
slope_column <- df_norm_t %>%
slide(
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[[1]][[2]] / 3600,
.before = window,
.complete = TRUE
) %>%
c()
slope_column <- df_norm_t %>%
slide(
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[[1]][[2]] / 3600,
.before = window,
.complete = TRUE
) %>%
as.character()
slope_column <- df_norm_t %>%
slide(
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[[1]][[2]] / 3600,
.before = window,
.complete = TRUE
) %>%
as.numeric(as.character())
slope_column <- df_norm_t %>%
slide(
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[[1]][[2]] / 3600,
.before = window,
.complete = TRUE
) %>%
as.character()
df_deriv <- cbind(df_deriv, slope_column)
slope_column <- df_norm_t %>%
slide(
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[[1]][[2]] / 3600,
.before = window,
.complete = TRUE
) %>%
as.character() %>% as.numeric
slope_column <- df_norm_t %>%
slide(
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[[1]][[2]] / 3600,
.before = window,
.complete = TRUE
) %>%
as.character() %>% as.numeric()
df_deriv <- data.frame(Time = df_norm_t$Time)
for (i in colnames(df_norm_t)[-ncol(df_norm_t)]) {
slope_column <- df_norm_t %>%
slide(
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[[1]][[2]] / 3600,
.before = window,
.complete = TRUE
) %>%
as.character()
df_deriv <- cbind(df_deriv, slope_column)
}
View(df_deriv)
# Reformat df_deriv to match data formatting.
df_deriv_1 <- df_deriv %>%
# as.data.frame() %>%
t() %>%
as.data.frame() %>%
slice(-1) %>%
select(-all_of(1:window)) %>%
mutate_all(as.numeric)
View(df_deriv_1)
lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)
lm(V1 ~ Time, data = df_norm_t)
lm(V1 ~ Time, data = df_norm_t) %>% View()
df_deriv_x <- data.frame(Time = df_norm_t$Time)
slope_column <- df_norm_t %>%
slide(
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[[1]]$coefficients / 3600,
.before = window,
.complete = TRUE
) %>%
as.character()
slope_column <- df_norm_t %>%
slide(
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)$coefficients / 3600,
.before = window,
.complete = TRUE
) %>%
as.character()
slope_column <- df_norm_t %>%
slide(
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[1]$coefficients / 3600,
.before = window,
.complete = TRUE
) %>%
as.character()
slope_column <- df_norm_t %>%
slide(
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[1]$coefficients / 3600,
.before = window,
.complete = TRUE
) %>%
as.character()
View(slope_column)
slope_column
slope_column <- df_norm_t %>%
slide(
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[1]$coefficients / 3600,
.before = window,
.complete = TRUE
) %>%
as.character()
df_deriv_x <- cbind(df_deriv, slope_column)
View(df_deriv_x)
for (i in colnames(df_norm_t)[-ncol(df_norm_t)]) {
slope_column <- df_norm_t %>%
slide(
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[1]$coefficients / 3600,
.before = window,
.complete = TRUE
) %>%
as.character()
df_deriv_x <- cbind(df_deriv, slope_column)
}
df_deriv_x <- data.frame(Time = df_norm_t$Time)
for (i in colnames(df_norm_t)[-ncol(df_norm_t)]) {
slope_column <- df_norm_t %>%
slide(
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[1]$coefficients / 3600,
.before = window,
.complete = TRUE
) %>%
as.character()
df_deriv_x <- cbind(df_deriv, slope_column)
}
View(df_deriv_x)
slope_column <- df_norm_t %>%
slide(
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[1][2] / 3600,
.before = window,
.complete = TRUE
) %>%
as.character()
slope_column <- df_norm_t %>%
slide(
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[1][[2]] / 3600,
.before = window,
.complete = TRUE
) %>%
as.character()
slope_column <- df_norm_t %>%
slide(
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[[1]][[2]] / 3600,
.before = window,
.complete = TRUE
) %>%
as.character()
df_deriv <- data.frame(Time = df_norm_t$Time)
for (i in colnames(df_norm_t)[-ncol(df_norm_t)]) {
slope_column <- df_norm_t %>%
slide(
~lm(
as.formula(
paste0(i, " ~ Time")
),
data = .x
)[[1]][[2]] / 3600,
.before = window,
.complete = TRUE
) %>%
as.character()
df_deriv <- cbind(df_deriv, slope_column)
}
# Reformat df_deriv to match data formatting.
df_deriv_1 <- df_deriv %>%
# as.data.frame() %>%
t() %>%
as.data.frame()
View(df_deriv_1)
# Reformat df_deriv to match data formatting.
df_deriv_1 <- df_deriv %>%
# as.data.frame() %>%
t() %>%
as.data.frame() %>%
slice(-1)
View(df_deriv_1)
# Reformat df_deriv to match data formatting.
df_deriv_1 <- df_deriv %>%
# as.data.frame() %>%
t() %>%
as.data.frame() %>%
slice(-1) %>%
select(-all_of(1:window)) %>%
mutate_all(as.numeric)
MS_list <- apply(df_deriv_1, 1, function(x) max(as.numeric(x)))
View(df_deriv)
df_norm_t <- data %>%
t() %>%
as.data.frame() %>%
mutate_all(
~ as.numeric(as.character(.x))
) %>%
suppressWarnings() %>%
na.omit()
df_norm_t$Time <- rownames(df_norm_t)
df_deriv <- data.frame(Time = df_norm_t$Time)
for (i in colnames(df_norm_t)[-ncol(df_norm_t)]) {
formula <- as.formula(paste0(i, " ~ Time"))
slope_column <- df_norm_t %>%
slide(
~lm(formula, data = .x)[[1]][[2]] / 3600,
.before = window,
.complete = TRUE
) %>%
as.character()
df_deriv <- cbind(df_deriv, slope_column)
}
df_deriv <- df_deriv %>%
t() %>%
as.data.frame() %>%
slice(-1) %>%
select(-all_of(1:window)) %>%
mutate_all(as.numeric)
View(df_deriv)
MS_list <- apply(df_deriv, 1, function(x) max(as.numeric(x)))
