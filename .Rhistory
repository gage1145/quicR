unite(
Sample_ID,
c("V1", "V2"),
sep = "",
na.rm = T
) %>%
rbind(c(NA, NA, "N"))
View(comps)
summary <- left_join(summary, comps)
# Create a summary data frame.
summary <- (
if (dilution_bool) {
summary <- df_analyzed %>%
group_by(Sample_ID, Dilutions)
} else {
summary <- df_analyzed %>%
group_by(Sample_ID)
}) %>%
summarise(
reps      = n(),
mean_TtT  = mean(TtT),
# sd_TtT    = sd(TtT),
mean_RAF  = mean(RAF),
# sd_RAF    = sd(RAF),
mean_MPR  = mean(MPR),
# sd_MPR    = sd(MPR),
mean_MS   = mean(MS),
# sd_MS     = sd(MS),
thres_pos = sum(crossed) / n() > 0.5
)
for (metric in metrics) {
# Create a dataframe of the individual comparisons.
comps <- LSD.test( # Perform the post-hoc multiple comparisons test.
# Create the statistical model using ANOVA.
aov(as.formula(paste0(metric, " ~ ", "Sample_ID")),
data = df_analyzed
),
"Sample_ID",
p.adj = "holm", group = F
)[["comparison"]]
# Initialize columns which will hold unique IDs for each sample compared.
comps <- comps %>%
cbind(
rownames(comps) %>%
strsplit(" - ") %>%
as.data.frame() %>%
t() %>%
as.data.frame()
) %>%
select(-difference) %>%
# Remove all comparisons that are not against "N".
subset(
V1 == "N" |
V2 == "N" |
str_detect(V1, "N_") |
str_detect(V2, "N_")
) %>%
mutate(
pvalue = as.numeric(pvalue),
signif. = as.numeric(signif.)
) %>%
rename(
"{metric}_pvalue" := pvalue,
"{metric}_significance" := signif.
) %>%
mutate(
V1 = replace(V1, V1 == "N", NA),
V2 = replace(V2, V2 == "N", NA)
) %>%
unite(
Sample_ID,
c("V1", "V2"),
sep = "",
na.rm = T
) %>%
rbind(c(NA, NA, "N"))
summary <- left_join(summary, comps)
}
# Initialize columns which will hold unique IDs for each sample compared.
comps <- comps %>%
cbind(
rownames(comps) %>%
strsplit(" - ") %>%
as.data.frame() %>%
t() %>%
as.data.frame()
) %>%
select(-difference) %>%
# Remove all comparisons that are not against "N".
subset(
V1 == "N" |
V2 == "N" |
str_detect(V1, "N_") |
str_detect(V2, "N_")
) %>%
mutate(
pvalue = as.numeric(pvalue),
signif. = as.numeric(signif.)
) %>%
rename(
"{metric}_pvalue" := pvalue,
"{metric}_significance" := signif.
) %>%
mutate(
V1 = replace(V1, V1 == "N", NA),
V2 = replace(V2, V2 == "N", NA)
) %>%
unite(
Sample_ID,
c("V1", "V2"),
sep = "",
na.rm = T
) %>%
rbind(c(NA, NA, "N"))
# Create a dataframe of the individual comparisons.
comps <- LSD.test( # Perform the post-hoc multiple comparisons test.
# Create the statistical model using ANOVA.
aov(as.formula(paste0(metric, " ~ ", "Sample_ID")),
data = df_analyzed
),
"Sample_ID",
p.adj = "holm", group = F
)[["comparison"]]
# Initialize columns which will hold unique IDs for each sample compared.
comps <- comps %>%
cbind(
rownames(comps) %>%
strsplit(" - ") %>%
as.data.frame() %>%
t() %>%
as.data.frame()
) %>%
select(-difference) %>%
# Remove all comparisons that are not against "N".
subset(
V1 == "N" |
V2 == "N" |
str_detect(V1, "N_") |
str_detect(V2, "N_")
) %>%
mutate(
pvalue = as.numeric(pvalue),
signif. = as.numeric(signif.)
) %>%
rename(
"{metric}_pvalue" := pvalue,
"{metric}_significance" := signif.
) %>%
mutate(
V1 = replace(V1, V1 == "N", NA),
V2 = replace(V2, V2 == "N", NA)
) %>%
unite(
Sample_ID,
c("V1", "V2"),
sep = "",
na.rm = T
) %>%
rbind(c(NA, NA, "N"))
?left_join
# Create a dataframe of the individual comparisons.
comps <- LSD.test( # Perform the post-hoc multiple comparisons test.
# Create the statistical model using ANOVA.
aov(as.formula(paste0(metric, " ~ ", "Sample_ID")),
data = df_analyzed
),
"Sample_ID",
p.adj = "holm", group = F
)[["comparison"]]
# Initialize columns which will hold unique IDs for each sample compared.
comps <- comps %>%
cbind(
rownames(comps) %>%
strsplit(" - ") %>%
as.data.frame() %>%
t() %>%
as.data.frame()
) %>%
select(-difference) %>%
# Remove all comparisons that are not against "N".
subset(
V1 == "N" |
V2 == "N" |
str_detect(V1, "N_") |
str_detect(V2, "N_")
) %>%
mutate(
pvalue = as.numeric(pvalue),
signif. = as.numeric(signif.)
) %>%
rename(
"{metric}_pvalue" := pvalue,
"{metric}_significance" := signif.
) %>%
mutate(
V1 = replace(V1, V1 == "N", NA),
V2 = replace(V2, V2 == "N", NA)
) %>%
unite(
Sample_ID,
c("V1", "V2"),
sep = "",
na.rm = T
) %>%
rbind(c(NA, NA, "N"))
# Create a dataframe of the individual comparisons.
comps <- LSD.test( # Perform the post-hoc multiple comparisons test.
# Create the statistical model using ANOVA.
aov(as.formula(paste0(metric, " ~ ", "Sample_ID")),
data = df_analyzed
),
"Sample_ID",
p.adj = "holm", group = F
)[["comparison"]]
# Initialize columns which will hold unique IDs for each sample compared.
comps <- comps %>%
cbind(
rownames(comps) %>%
strsplit(" - ") %>%
as.data.frame() %>%
t() %>%
as.data.frame()
) %>%
select(-difference) %>%
# Remove all comparisons that are not against "N".
subset(
V1 == "N" |
V2 == "N" |
str_detect(V1, "N_") |
str_detect(V2, "N_")
) %>%
mutate(
pvalue = as.numeric(pvalue),
signif. = as.numeric(signif.)
) %>%
rename(
"{metric}_pvalue" := pvalue,
"{metric}_significance" := signif.
)
# Create a dataframe of the individual comparisons.
comps <- LSD.test( # Perform the post-hoc multiple comparisons test.
# Create the statistical model using ANOVA.
aov(as.formula(paste0(metric, " ~ ", "Sample_ID")),
data = df_analyzed
),
"Sample_ID",
p.adj = "holm", group = F
)[["comparison"]]
# Initialize columns which will hold unique IDs for each sample compared.
comps <- comps %>%
cbind(
rownames(comps) %>%
strsplit(" - ") %>%
as.data.frame() %>%
t() %>%
as.data.frame()
) %>%
select(-difference) %>%
# Remove all comparisons that are not against "N".
subset(
V1 == "N" |
V2 == "N" |
str_detect(V1, "N_") |
str_detect(V2, "N_")
) %>%
mutate(
pvalue = as.numeric(pvalue),
signif. = as.numeric(signif.)
) %>%
rename(
"{metric}_pvalue" := pvalue,
"{metric}_significance" := signif.
) %>%
mutate(
V1 = replace(V1, V1 == "N" | str_detect(V1, "N_"), NA),
V2 = replace(V2, V2 == "N" | str_detect(V2, "N_"), NA)
) %>%
unite(
Sample_ID,
c("V1", "V2"),
sep = "",
na.rm = T
) %>%
rbind(c(NA, NA, "N"))
summary <- left_join(summary, comps)
# Create a summary data frame.
summary <- (
if (dilution_bool) {
summary <- df_analyzed %>%
group_by(Sample_ID, Dilutions)
} else {
summary <- df_analyzed %>%
group_by(Sample_ID)
}) %>%
summarise(
reps      = n(),
mean_TtT  = mean(TtT),
# sd_TtT    = sd(TtT),
mean_RAF  = mean(RAF),
# sd_RAF    = sd(RAF),
mean_MPR  = mean(MPR),
# sd_MPR    = sd(MPR),
mean_MS   = mean(MS),
# sd_MS     = sd(MS),
thres_pos = sum(crossed) / n() > 0.5
)
metrics <- c("MPR", "MS")
for (metric in metrics) {
# Create a dataframe of the individual comparisons.
comps <- LSD.test( # Perform the post-hoc multiple comparisons test.
# Create the statistical model using ANOVA.
aov(as.formula(paste0(metric, " ~ ", "Sample_ID")),
data = df_analyzed
),
"Sample_ID",
p.adj = "holm", group = F
)[["comparison"]]
# Initialize columns which will hold unique IDs for each sample compared.
comps <- comps %>%
cbind(
rownames(comps) %>%
strsplit(" - ") %>%
as.data.frame() %>%
t() %>%
as.data.frame()
) %>%
select(-difference) %>%
# Remove all comparisons that are not against "N".
subset(
V1 == "N" |
V2 == "N" |
str_detect(V1, "N_") |
str_detect(V2, "N_")
) %>%
mutate(
pvalue = as.numeric(pvalue),
signif. = as.numeric(signif.)
) %>%
rename(
"{metric}_pvalue" := pvalue,
"{metric}_significance" := signif.
) %>%
mutate(
V1 = replace(V1, V1 == "N" | str_detect(V1, "N_"), NA),
V2 = replace(V2, V2 == "N" | str_detect(V2, "N_"), NA)
) %>%
unite(
Sample_ID,
c("V1", "V2"),
sep = "",
na.rm = T
) %>%
rbind(c(NA, NA, "N"))
summary <- left_join(summary, comps)
}
?LSD.test
# Create a summary data frame.
summary <- (
if (dilution_bool) {
summary <- df_analyzed %>%
group_by(Sample_ID, Dilutions)
} else {
summary <- df_analyzed %>%
group_by(Sample_ID)
}) %>%
summarise(
reps      = n(),
mean_TtT  = mean(TtT),
# sd_TtT    = sd(TtT),
mean_RAF  = mean(RAF),
# sd_RAF    = sd(RAF),
mean_MPR  = mean(MPR),
# sd_MPR    = sd(MPR),
mean_MS   = mean(MS),
# sd_MS     = sd(MS),
thres_pos = sum(crossed) / n() > 0.5
)
metrics <- c("MPR", "MS")
for (metric in metrics) {
# Create a dataframe of the individual comparisons.
comps <- LSD.test( # Perform the post-hoc multiple comparisons test.
# Create the statistical model using ANOVA.
aov(as.formula(paste0(metric, " ~ ", "Sample_ID")),
data = df_analyzed
),
"Sample_ID",
p.adj = "none", group = F
)[["comparison"]]
# Initialize columns which will hold unique IDs for each sample compared.
comps <- comps %>%
cbind(
rownames(comps) %>%
strsplit(" - ") %>%
as.data.frame() %>%
t() %>%
as.data.frame()
) %>%
select(-difference) %>%
# Remove all comparisons that are not against "N".
subset(
V1 == "N" |
V2 == "N" |
str_detect(V1, "N_") |
str_detect(V2, "N_")
) %>%
mutate(
pvalue = as.numeric(pvalue),
signif. = as.numeric(signif.)
) %>%
rename(
"{metric}_pvalue" := pvalue,
"{metric}_significance" := signif.
) %>%
mutate(
V1 = replace(V1, V1 == "N" | str_detect(V1, "N_"), NA),
V2 = replace(V2, V2 == "N" | str_detect(V2, "N_"), NA)
) %>%
unite(
Sample_ID,
c("V1", "V2"),
sep = "",
na.rm = T
) %>%
rbind(c(NA, NA, "N"))
summary <- left_join(summary, comps)
}
# Create a dataframe of the individual comparisons.
comps <- LSD.test( # Perform the post-hoc multiple comparisons test.
# Create the statistical model using ANOVA.
aov(as.formula(paste0(metric, " ~ ", "Sample_ID")),
data = df_analyzed
),
"Sample_ID",
p.adj = "none", group = F
)[["comparison"]]
# Create a summary data frame.
summary <- (
if (dilution_bool) {
summary <- df_analyzed %>%
group_by(Sample_ID, Dilutions)
} else {
summary <- df_analyzed %>%
group_by(Sample_ID)
}) %>%
summarise(
reps      = n(),
mean_TtT  = mean(TtT),
# sd_TtT    = sd(TtT),
mean_RAF  = mean(RAF),
# sd_RAF    = sd(RAF),
mean_MPR  = mean(MPR),
# sd_MPR    = sd(MPR),
mean_MS   = mean(MS),
# sd_MS     = sd(MS),
thres_pos = sum(crossed) / n() > 0.5
)
metrics <- c("MPR", "MS")
for (metric in metrics) {
# Create a dataframe of the individual comparisons.
comps <- LSD.test( # Perform the post-hoc multiple comparisons test.
# Create the statistical model using ANOVA.
aov(as.formula(paste0(metric, " ~ ", "Sample_ID")),
data = df_analyzed
),
"Sample_ID",
p.adj = "holm", group = F
)[["comparison"]]
# Initialize columns which will hold unique IDs for each sample compared.
comps <- comps %>%
cbind(
rownames(comps) %>%
strsplit(" - ") %>%
as.data.frame() %>%
t() %>%
as.data.frame()
) %>%
select(-difference) %>%
# Remove all comparisons that are not against "N".
subset(
V1 == "N" |
V2 == "N" |
str_detect(V1, "N_") |
str_detect(V2, "N_")
) %>%
mutate(
pvalue = as.numeric(pvalue),
signif. = as.numeric(signif.)
) %>%
rename(
"{metric}_pvalue" := pvalue,
"{metric}_significance" := signif.
) %>%
mutate(
V1 = replace(V1, V1 == "N" | str_detect(V1, "N_"), NA),
V2 = replace(V2, V2 == "N" | str_detect(V2, "N_"), NA)
) %>%
unite(
Sample_ID,
c("V1", "V2"),
sep = "",
na.rm = T
) %>%
rbind(c(NA, NA, "N"))
summary <- left_join(summary, comps)
}
summary <- summary %>%
mutate(
MPR_pvalue = as.numeric(MPR_pvalue),
MS_pvalue = as.numeric(MS_pvalue),
Positive = thres_pos & MPR_pvalue <= 0.05 & MS_pvalue <= 0.05
)
source("~/RTQ_analysis/calculate_metrics.R", echo=TRUE)
